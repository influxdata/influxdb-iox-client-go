// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.5
// source: influxdata/iox/ingester/v1/parquet_metadata.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// IOx-specific metadata that will be serialized into the file-level key-value Parquet metadata
// under a single key.
type IoxMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Object store ID. Used in the parquet filename. 16 bytes in big-endian order.
	ObjectStoreId []byte `protobuf:"bytes,1,opt,name=object_store_id,json=objectStoreId,proto3" json:"object_store_id,omitempty"`
	// Timestamp when this file was created.
	CreationTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
	// Unique namespace ID.
	NamespaceId int64 `protobuf:"varint,3,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Unique name of the namespace.
	NamespaceName string `protobuf:"bytes,4,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// Unique shard ID.
	ShardId int64 `protobuf:"varint,17,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// Unique table ID.
	TableId int64 `protobuf:"varint,6,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Table that holds this parquet file.
	TableName string `protobuf:"bytes,7,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Unique partition ID.
	PartitionId int64 `protobuf:"varint,8,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Partition key of the partition that holds this parquet file.
	PartitionKey string `protobuf:"bytes,9,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	// The maximum sequence number from a shard in this parquet file.
	MaxSequenceNumber int64 `protobuf:"varint,13,opt,name=max_sequence_number,json=maxSequenceNumber,proto3" json:"max_sequence_number,omitempty"`
	// The sort key of this chunk
	SortKey *SortKey `protobuf:"bytes,15,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"`
	// the compaction level of the file
	CompactionLevel int32 `protobuf:"varint,16,opt,name=compaction_level,json=compactionLevel,proto3" json:"compaction_level,omitempty"`
}

func (x *IoxMetadata) Reset() {
	*x = IoxMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IoxMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IoxMetadata) ProtoMessage() {}

func (x *IoxMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IoxMetadata.ProtoReflect.Descriptor instead.
func (*IoxMetadata) Descriptor() ([]byte, []int) {
	return file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *IoxMetadata) GetObjectStoreId() []byte {
	if x != nil {
		return x.ObjectStoreId
	}
	return nil
}

func (x *IoxMetadata) GetCreationTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTimestamp
	}
	return nil
}

func (x *IoxMetadata) GetNamespaceId() int64 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *IoxMetadata) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *IoxMetadata) GetShardId() int64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *IoxMetadata) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *IoxMetadata) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *IoxMetadata) GetPartitionId() int64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *IoxMetadata) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *IoxMetadata) GetMaxSequenceNumber() int64 {
	if x != nil {
		return x.MaxSequenceNumber
	}
	return 0
}

func (x *IoxMetadata) GetSortKey() *SortKey {
	if x != nil {
		return x.SortKey
	}
	return nil
}

func (x *IoxMetadata) GetCompactionLevel() int32 {
	if x != nil {
		return x.CompactionLevel
	}
	return 0
}

// Sort key of a chunk.
type SortKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expressions []*SortKey_Expr `protobuf:"bytes,1,rep,name=expressions,proto3" json:"expressions,omitempty"`
}

func (x *SortKey) Reset() {
	*x = SortKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortKey) ProtoMessage() {}

func (x *SortKey) ProtoReflect() protoreflect.Message {
	mi := &file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortKey.ProtoReflect.Descriptor instead.
func (*SortKey) Descriptor() ([]byte, []int) {
	return file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *SortKey) GetExpressions() []*SortKey_Expr {
	if x != nil {
		return x.Expressions
	}
	return nil
}

// A sort expression
type SortKey_Expr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the column
	Column string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	/// Whether the data is sorted in descending order
	Descending bool `protobuf:"varint,2,opt,name=descending,proto3" json:"descending,omitempty"`
	/// Whether the data is sorted with nulls first
	NullsFirst bool `protobuf:"varint,3,opt,name=nulls_first,json=nullsFirst,proto3" json:"nulls_first,omitempty"`
}

func (x *SortKey_Expr) Reset() {
	*x = SortKey_Expr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortKey_Expr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortKey_Expr) ProtoMessage() {}

func (x *SortKey_Expr) ProtoReflect() protoreflect.Message {
	mi := &file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortKey_Expr.ProtoReflect.Descriptor instead.
func (*SortKey_Expr) Descriptor() ([]byte, []int) {
	return file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SortKey_Expr) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *SortKey_Expr) GetDescending() bool {
	if x != nil {
		return x.Descending
	}
	return false
}

func (x *SortKey_Expr) GetNullsFirst() bool {
	if x != nil {
		return x.NullsFirst
	}
	return false
}

var File_influxdata_iox_ingester_v1_parquet_metadata_proto protoreflect.FileDescriptor

var file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDesc = []byte{
	0x0a, 0x31, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x6f, 0x78,
	0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72,
	0x71, 0x75, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x69, 0x6f, 0x78, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf7, 0x04, 0x0a, 0x0b, 0x49, 0x6f, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69,
	0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x69, 0x6f, 0x78, 0x2e, 0x69, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x0b, 0x4a, 0x04, 0x08, 0x0b, 0x10,
	0x0c, 0x4a, 0x04, 0x08, 0x0c, 0x10, 0x0d, 0x4a, 0x04, 0x08, 0x0e, 0x10, 0x0f, 0x4a, 0x04, 0x08,
	0x05, 0x10, 0x06, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x13,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f,
	0x66, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x52, 0x0c, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x07, 0x53,
	0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e,
	0x66, 0x6c, 0x75, 0x78, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x69, 0x6f, 0x78, 0x2e, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x2e, 0x45, 0x78, 0x70, 0x72, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x5f, 0x0a, 0x04, 0x45, 0x78, 0x70, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x73, 0x5f, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x73, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x6f, 0x78,
	0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescOnce sync.Once
	file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescData = file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDesc
)

func file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescGZIP() []byte {
	file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescOnce.Do(func() {
		file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescData)
	})
	return file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDescData
}

var file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_influxdata_iox_ingester_v1_parquet_metadata_proto_goTypes = []interface{}{
	(*IoxMetadata)(nil),           // 0: influxdata.iox.ingester.v1.IoxMetadata
	(*SortKey)(nil),               // 1: influxdata.iox.ingester.v1.SortKey
	(*SortKey_Expr)(nil),          // 2: influxdata.iox.ingester.v1.SortKey.Expr
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_influxdata_iox_ingester_v1_parquet_metadata_proto_depIdxs = []int32{
	3, // 0: influxdata.iox.ingester.v1.IoxMetadata.creation_timestamp:type_name -> google.protobuf.Timestamp
	1, // 1: influxdata.iox.ingester.v1.IoxMetadata.sort_key:type_name -> influxdata.iox.ingester.v1.SortKey
	2, // 2: influxdata.iox.ingester.v1.SortKey.expressions:type_name -> influxdata.iox.ingester.v1.SortKey.Expr
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_influxdata_iox_ingester_v1_parquet_metadata_proto_init() }
func file_influxdata_iox_ingester_v1_parquet_metadata_proto_init() {
	if File_influxdata_iox_ingester_v1_parquet_metadata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IoxMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortKey_Expr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_influxdata_iox_ingester_v1_parquet_metadata_proto_goTypes,
		DependencyIndexes: file_influxdata_iox_ingester_v1_parquet_metadata_proto_depIdxs,
		MessageInfos:      file_influxdata_iox_ingester_v1_parquet_metadata_proto_msgTypes,
	}.Build()
	File_influxdata_iox_ingester_v1_parquet_metadata_proto = out.File
	file_influxdata_iox_ingester_v1_parquet_metadata_proto_rawDesc = nil
	file_influxdata_iox_ingester_v1_parquet_metadata_proto_goTypes = nil
	file_influxdata_iox_ingester_v1_parquet_metadata_proto_depIdxs = nil
}
